
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.course.views;

import java.awt.Component;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import com.course.dao.KhoaHocDAO;
import com.course.dao.ThongTinDAO;
import com.course.entites.KhoaHoc;
import com.course.model.Author;
import com.course.model.MsgBox;
import com.course.model.Util;

/**
 *
 * @author abc
 */
public final class ThongKeJFrame extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;

    /**
     * Creates new form ThongKeJFrame
     *
     * @param component lấy các thuộc tính từ lớp cha
     */
    public ThongKeJFrame(Component component) {
        if (Author.isLogin()) {
            initComponents();
            this.initData(component);
            if (!Author.isManager()) {
                this.tabsTHTK.remove(3);
            }
        } else {
            int answer = MsgBox.confirm(component, "Bạn chưa đăng nhập tài khoản!\n"
                    + "Bạn có muốn tới trang đăng nhập?",
                    "Chưa đăng nhập tài khoản.", MsgBox.BaoLoi);
            if (answer == 0) {
                this.dispose();
                new DangNhapJDialog(this, true).setVisible(true);
            } else {
                System.exit(0);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTongHopTK = new javax.swing.JLabel();
        tabsTHTK = new javax.swing.JTabbedPane();
        pnlNguoiHoc = new javax.swing.JPanel();
        spnNguoiHoc = new javax.swing.JScrollPane();
        tblNguoiHoc = new javax.swing.JTable();
        btnExportNguoiHoc = new javax.swing.JButton();
        pnlChuyenDe = new javax.swing.JPanel();
        spnChuyenDe = new javax.swing.JScrollPane();
        tblChuyenDe = new javax.swing.JTable();
        btnExportChuyenDe = new javax.swing.JButton();
        pnlBangDiem = new javax.swing.JPanel();
        lblKhoaHoc = new javax.swing.JLabel();
        spnBangDiem = new javax.swing.JScrollPane();
        tblBangDiem = new javax.swing.JTable();
        cboKhoaHoc = new javax.swing.JComboBox<>();
        btnExportBangdiem = new javax.swing.JButton();
        pnlDoanhThu = new javax.swing.JPanel();
        lblNam = new javax.swing.JLabel();
        cboNam = new javax.swing.JComboBox<>();
        spnDoanhThu = new javax.swing.JScrollPane();
        tblDoanhThu = new javax.swing.JTable();
        btnExportDoanhThu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("EduSys - Quản lý thống kê");

        lblTongHopTK.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        lblTongHopTK.setForeground(java.awt.Color.blue);
        lblTongHopTK.setText("TỔNG HỢP THỐNG KÊ");

        tabsTHTK.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N

        tblNguoiHoc.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        tblNguoiHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NĂM", "SỐ NH", "ĐK SỚM NHẨT", "ĐK MUỘN NHẤT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        spnNguoiHoc.setViewportView(tblNguoiHoc);
        if (tblNguoiHoc.getColumnModel().getColumnCount() > 0) {
            tblNguoiHoc.getColumnModel().getColumn(0).setMaxWidth(50);
            tblNguoiHoc.getColumnModel().getColumn(1).setMaxWidth(50);
        }

        btnExportNguoiHoc.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        btnExportNguoiHoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/icons/excel.png"))); // NOI18N
        btnExportNguoiHoc.setText("Export");
        btnExportNguoiHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportNguoiHocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlNguoiHocLayout = new javax.swing.GroupLayout(pnlNguoiHoc);
        pnlNguoiHoc.setLayout(pnlNguoiHocLayout);
        pnlNguoiHocLayout.setHorizontalGroup(
            pnlNguoiHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNguoiHocLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlNguoiHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spnNguoiHoc, javax.swing.GroupLayout.DEFAULT_SIZE, 724, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlNguoiHocLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnExportNguoiHoc)))
                .addContainerGap())
        );
        pnlNguoiHocLayout.setVerticalGroup(
            pnlNguoiHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNguoiHocLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spnNguoiHoc, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExportNguoiHoc))
        );

        tabsTHTK.addTab("NGƯỜI HỌC", pnlNguoiHoc);

        tblChuyenDe.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        tblChuyenDe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CHUYÊN ĐỀ", "SL HV", "ĐIỂM TN", "ĐIỂM CN", "ĐIỂM TB"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        spnChuyenDe.setViewportView(tblChuyenDe);
        if (tblChuyenDe.getColumnModel().getColumnCount() > 0) {
            tblChuyenDe.getColumnModel().getColumn(1).setMaxWidth(50);
            tblChuyenDe.getColumnModel().getColumn(2).setMaxWidth(80);
            tblChuyenDe.getColumnModel().getColumn(3).setMaxWidth(80);
            tblChuyenDe.getColumnModel().getColumn(4).setMaxWidth(80);
        }

        btnExportChuyenDe.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        btnExportChuyenDe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/icons/excel.png"))); // NOI18N
        btnExportChuyenDe.setText("Export");
        btnExportChuyenDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportChuyenDeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlChuyenDeLayout = new javax.swing.GroupLayout(pnlChuyenDe);
        pnlChuyenDe.setLayout(pnlChuyenDeLayout);
        pnlChuyenDeLayout.setHorizontalGroup(
            pnlChuyenDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChuyenDeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlChuyenDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spnChuyenDe, javax.swing.GroupLayout.DEFAULT_SIZE, 724, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlChuyenDeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnExportChuyenDe)))
                .addContainerGap())
        );
        pnlChuyenDeLayout.setVerticalGroup(
            pnlChuyenDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChuyenDeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spnChuyenDe, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExportChuyenDe))
        );

        tabsTHTK.addTab("ĐIỂM CHUYÊN ĐỀ", pnlChuyenDe);

        lblKhoaHoc.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        lblKhoaHoc.setText("KHÓA HỌC:");

        tblBangDiem.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        tblBangDiem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MÃ NH", "HỌ VÀ TÊN", "ĐIỂM", "XẾP LOẠI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        spnBangDiem.setViewportView(tblBangDiem);
        if (tblBangDiem.getColumnModel().getColumnCount() > 0) {
            tblBangDiem.getColumnModel().getColumn(0).setMaxWidth(80);
            tblBangDiem.getColumnModel().getColumn(2).setMaxWidth(100);
            tblBangDiem.getColumnModel().getColumn(3).setMaxWidth(100);
        }

        cboKhoaHoc.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        cboKhoaHoc.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cboKhoaHocPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        btnExportBangdiem.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        btnExportBangdiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/icons/excel.png"))); // NOI18N
        btnExportBangdiem.setText("Export");
        btnExportBangdiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportBangdiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBangDiemLayout = new javax.swing.GroupLayout(pnlBangDiem);
        pnlBangDiem.setLayout(pnlBangDiemLayout);
        pnlBangDiemLayout.setHorizontalGroup(
            pnlBangDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBangDiemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblKhoaHoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(cboKhoaHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnExportBangdiem)
                .addContainerGap())
            .addComponent(spnBangDiem)
        );
        pnlBangDiemLayout.setVerticalGroup(
            pnlBangDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBangDiemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBangDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKhoaHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboKhoaHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExportBangdiem))
                .addGap(18, 18, 18)
                .addComponent(spnBangDiem, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE))
        );

        tabsTHTK.addTab("BẢNG DIỂM", pnlBangDiem);

        lblNam.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        lblNam.setText("NẮM:");

        cboNam.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        cboNam.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cboNamPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        tblDoanhThu.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        tblDoanhThu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CHUYÊN ĐỀ", "SỐ KH", "SÔ HV", "D. THU", "HP. TN", "HP. CN", "HP. TB"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        spnDoanhThu.setViewportView(tblDoanhThu);
        if (tblDoanhThu.getColumnModel().getColumnCount() > 0) {
            tblDoanhThu.getColumnModel().getColumn(1).setMaxWidth(80);
            tblDoanhThu.getColumnModel().getColumn(2).setMaxWidth(80);
            tblDoanhThu.getColumnModel().getColumn(3).setMaxWidth(80);
            tblDoanhThu.getColumnModel().getColumn(4).setMaxWidth(80);
            tblDoanhThu.getColumnModel().getColumn(5).setMaxWidth(80);
            tblDoanhThu.getColumnModel().getColumn(6).setMaxWidth(80);
        }

        btnExportDoanhThu.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        btnExportDoanhThu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/icons/excel.png"))); // NOI18N
        btnExportDoanhThu.setText("Export");
        btnExportDoanhThu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportDoanhThuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDoanhThuLayout = new javax.swing.GroupLayout(pnlDoanhThu);
        pnlDoanhThu.setLayout(pnlDoanhThuLayout);
        pnlDoanhThuLayout.setHorizontalGroup(
            pnlDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDoanhThuLayout.createSequentialGroup()
                .addGroup(pnlDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDoanhThuLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblNam, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboNam, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExportDoanhThu))
                    .addComponent(spnDoanhThu, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlDoanhThuLayout.setVerticalGroup(
            pnlDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDoanhThuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDoanhThuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNam, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExportDoanhThu))
                .addGap(18, 18, 18)
                .addComponent(spnDoanhThu, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        tabsTHTK.addTab("DOANH THU", pnlDoanhThu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTongHopTK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tabsTHTK)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTongHopTK, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabsTHTK)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboKhoaHocPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cboKhoaHocPopupMenuWillBecomeInvisible
        this.kh = this.cboKhoaHoc.getSelectedIndex();
        if (listKH != null) {
            BD = dao.getBangDiem(listKH.get(kh).getMaKH());
            this.setTable(tblBangDiem, BD);
        }
    }//GEN-LAST:event_cboKhoaHocPopupMenuWillBecomeInvisible

    private void cboNamPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cboNamPopupMenuWillBecomeInvisible
        this.kh = this.cboKhoaHoc.getSelectedIndex();
        if (listKH != null) {
            int year = Integer.parseInt(cboNam.getSelectedItem() + "");
            this.DT = dao.getDoanhThu(year);
            this.setTable(tblDoanhThu, DT);
        }
    }//GEN-LAST:event_cboNamPopupMenuWillBecomeInvisible

    private void btnExportBangdiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportBangdiemActionPerformed
        try {
            Util.saveToExcel(tblBangDiem);
        } catch (Exception e) {
            MsgBox.alert(btnExportBangdiem, "Export failed by: " + e.getMessage(), "Export to excel", MsgBox.BaoLoi);
        }
    }//GEN-LAST:event_btnExportBangdiemActionPerformed

    private void btnExportNguoiHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportNguoiHocActionPerformed
        try {
            Util.saveToExcel(tblNguoiHoc);
        } catch (Exception e) {
            MsgBox.alert(btnExportNguoiHoc, "Export failed by: " + e.getMessage(), "Export to excel", MsgBox.BaoLoi);
        }
    }//GEN-LAST:event_btnExportNguoiHocActionPerformed

    private void btnExportChuyenDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportChuyenDeActionPerformed
        try {
            Util.saveToExcel(tblChuyenDe);
        } catch (Exception e) {
            MsgBox.alert(btnExportChuyenDe, "Export failed by: " + e.getMessage(), "Export to excel", MsgBox.BaoLoi);
        }
    }//GEN-LAST:event_btnExportChuyenDeActionPerformed

    private void btnExportDoanhThuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportDoanhThuActionPerformed
        try {
            Util.saveToExcel(tblDoanhThu);
        } catch (Exception e) {
            MsgBox.alert(btnExportDoanhThu, "Export failed by: " + e.getMessage(), "Export to excel", MsgBox.BaoLoi);
        }
    }//GEN-LAST:event_btnExportDoanhThuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongKeJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ThongKeJFrame(null).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExportBangdiem;
    private javax.swing.JButton btnExportChuyenDe;
    private javax.swing.JButton btnExportDoanhThu;
    private javax.swing.JButton btnExportNguoiHoc;
    private javax.swing.JComboBox<String> cboKhoaHoc;
    private javax.swing.JComboBox<String> cboNam;
    private javax.swing.JLabel lblKhoaHoc;
    private javax.swing.JLabel lblNam;
    private javax.swing.JLabel lblTongHopTK;
    private javax.swing.JPanel pnlBangDiem;
    private javax.swing.JPanel pnlChuyenDe;
    private javax.swing.JPanel pnlDoanhThu;
    private javax.swing.JPanel pnlNguoiHoc;
    private javax.swing.JScrollPane spnBangDiem;
    private javax.swing.JScrollPane spnChuyenDe;
    private javax.swing.JScrollPane spnDoanhThu;
    private javax.swing.JScrollPane spnNguoiHoc;
    private javax.swing.JTabbedPane tabsTHTK;
    private javax.swing.JTable tblBangDiem;
    private javax.swing.JTable tblChuyenDe;
    private javax.swing.JTable tblDoanhThu;
    private javax.swing.JTable tblNguoiHoc;
    // End of variables declaration//GEN-END:variables

    private final ThongTinDAO dao = new ThongTinDAO();
    private List<Object[]> BD, NH, CD, DT;
    List<KhoaHoc> listKH;
    DefaultTableModel model;
    Integer kh = 0, nam = 0;

    // Cho phép truy xuát table từ bên ngoài
    protected JTabbedPane getTabsTHTK() {
        return tabsTHTK;
    }

    // Tải dữ liệu lần đầu
    private void initData(Component c) {
        // Sắp xếp bảng
        this.tblBangDiem.setAutoCreateRowSorter(true);
        this.tblChuyenDe.setAutoCreateRowSorter(true);
        this.tblDoanhThu.setAutoCreateRowSorter(true);
        this.tblNguoiHoc.setAutoCreateRowSorter(true);

        // Lấy các thuộc tính lớp cha gán vào lớp con
        this.setIconImage(((JFrame) c).getIconImage());
        this.setLocationRelativeTo(c);
        listKH = new KhoaHocDAO().SelectAll();
        this.getData();

        // Duyệt combobox
        if (!listKH.isEmpty()) {
            listKH.forEach((x) -> {
                cboKhoaHoc.addItem(x.getMaCD() + " - " + x.getGhiChu());
            });
        }
        // Duyệt combobox
        NH.forEach((x) -> cboNam.addItem(x[0].toString()));
        // Đổ dữ liệu qua các bảng
        this.setTable(tblBangDiem, BD);
        this.setTable(tblNguoiHoc, NH);
        this.setTable(tblChuyenDe, CD);
        this.setTable(tblDoanhThu, DT);
    }

    // Lấy dữ liệu data
    private void getData() {
        this.BD = dao.getBangDiem(listKH.get(kh).getMaKH());
        this.NH = dao.getNguoiHoc();
        this.CD = dao.getChuyenDe();
        int year = Integer.parseInt((NH.get(0)[0] + "").substring(0, 4));
        this.DT = dao.getDoanhThu(year);
    }

    // Xem thông tin trên bảng được chọn
    private void setTable(JTable table, List<Object[]> datas) {
        model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        datas.forEach((x) -> model.addRow(x));
    }
}
