/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.course.views;

import java.awt.Color;
import java.io.File;
import static java.lang.Thread.sleep;
import java.util.Date;

import com.course.model.MsgBox;
import com.course.model.SendMail;
import com.course.model.Util;
import com.course.model.XImage;

/**
 *
 * @author abc
 */
public final class MailSendingJDialog extends javax.swing.JDialog {

    private static final long serialVersionUID = 1L;

    /**
     * Creates new form MailSendingJDialog
     *
     * @param parent
     * @param modal
     */
    java.awt.Frame parent;

    public MailSendingJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.parent = parent;
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFrom = new javax.swing.JPanel();
        chkAutoFrom = new javax.swing.JCheckBox();
        spr1 = new javax.swing.JSeparator();
        lblEmailGui = new javax.swing.JLabel();
        lblMatKhau = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtMatKhau = new javax.swing.JPasswordField();
        pnlTo = new javax.swing.JPanel();
        lblEmailTo2 = new javax.swing.JLabel();
        txtTieuDe = new javax.swing.JTextField();
        spr5 = new javax.swing.JSeparator();
        lblEmailTo = new javax.swing.JLabel();
        lblEmailMes = new javax.swing.JLabel();
        chkAutoMails = new javax.swing.JCheckBox();
        spnToMail = new javax.swing.JScrollPane();
        txtToMail = new javax.swing.JTextArea();
        chkAutoMes = new javax.swing.JCheckBox();
        spnToMes = new javax.swing.JScrollPane();
        txtMesage = new javax.swing.JTextArea();
        spr2 = new javax.swing.JSeparator();
        spr3 = new javax.swing.JSeparator();
        spr4 = new javax.swing.JSeparator();
        pnlButton = new javax.swing.JPanel();
        bntAddfile = new javax.swing.JButton();
        bntClear = new javax.swing.JButton();
        bntExit = new javax.swing.JButton();
        bntSend = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("EduSys - gửi email");
        setAlwaysOnTop(true);

        pnlFrom.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gửi từ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Cambria", 1, 18))); // NOI18N
        pnlFrom.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        chkAutoFrom.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        chkAutoFrom.setText("auto");
        chkAutoFrom.setBorder(null);
        chkAutoFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAutoFromActionPerformed(evt);
            }
        });

        spr1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lblEmailGui.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        lblEmailGui.setText("Địa chỉ email:");

        lblMatKhau.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        lblMatKhau.setText("Mật khẩu:");

        txtEmail.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        txtEmail.setFocusTraversalPolicyProvider(true);
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmailKeyReleased(evt);
            }
        });

        txtMatKhau.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        txtMatKhau.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMatKhauKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlFromLayout = new javax.swing.GroupLayout(pnlFrom);
        pnlFrom.setLayout(pnlFromLayout);
        pnlFromLayout.setHorizontalGroup(
            pnlFromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFromLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkAutoFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spr1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlFromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblEmailGui, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlFromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEmail)
                    .addComponent(txtMatKhau))
                .addContainerGap())
        );
        pnlFromLayout.setVerticalGroup(
            pnlFromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFromLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFromLayout.createSequentialGroup()
                        .addGroup(pnlFromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(chkAutoFrom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlFromLayout.createSequentialGroup()
                                .addGroup(pnlFromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblEmailGui, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlFromLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 7, Short.MAX_VALUE))
                    .addComponent(spr1))
                .addContainerGap())
        );

        pnlTo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gửi tới", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Cambria", 1, 18))); // NOI18N
        pnlTo.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        lblEmailTo2.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        lblEmailTo2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblEmailTo2.setText("Tiêu đề gửi:");

        txtTieuDe.setFont(new java.awt.Font("Cambria", 3, 14)); // NOI18N

        lblEmailTo.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        lblEmailTo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEmailTo.setText("To Email:");

        lblEmailMes.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        lblEmailMes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEmailMes.setText("Nội dung:");

        chkAutoMails.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        chkAutoMails.setText("auto");
        chkAutoMails.setBorder(null);
        chkAutoMails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAutoMailsActionPerformed(evt);
            }
        });

        txtToMail.setColumns(20);
        txtToMail.setFont(new java.awt.Font("Cambria", 3, 14)); // NOI18N
        txtToMail.setLineWrap(true);
        txtToMail.setRows(5);
        txtToMail.setBorder(null);
        txtToMail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtToMailKeyReleased(evt);
            }
        });
        spnToMail.setViewportView(txtToMail);

        chkAutoMes.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        chkAutoMes.setText("auto");
        chkAutoMes.setBorder(null);
        chkAutoMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAutoMesActionPerformed(evt);
            }
        });

        txtMesage.setColumns(20);
        txtMesage.setFont(new java.awt.Font("Cambria", 3, 14)); // NOI18N
        txtMesage.setLineWrap(true);
        txtMesage.setRows(5);
        txtMesage.setBorder(null);
        spnToMes.setViewportView(txtMesage);

        spr2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        spr3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout pnlToLayout = new javax.swing.GroupLayout(pnlTo);
        pnlTo.setLayout(pnlToLayout);
        pnlToLayout.setHorizontalGroup(
            pnlToLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlToLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlToLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spr4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlToLayout.createSequentialGroup()
                        .addGroup(pnlToLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(chkAutoMes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chkAutoMails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblEmailTo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblEmailMes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlToLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spr2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spr3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlToLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spnToMail)
                            .addComponent(spnToMes, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(spr5)
                    .addGroup(pnlToLayout.createSequentialGroup()
                        .addComponent(lblEmailTo2)
                        .addGap(18, 18, 18)
                        .addComponent(txtTieuDe)))
                .addContainerGap())
        );
        pnlToLayout.setVerticalGroup(
            pnlToLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlToLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlToLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmailTo2)
                    .addComponent(txtTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(spr5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlToLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(spnToMail, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlToLayout.createSequentialGroup()
                        .addComponent(lblEmailTo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkAutoMails, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(spr2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spr4, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(pnlToLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlToLayout.createSequentialGroup()
                        .addGroup(pnlToLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlToLayout.createSequentialGroup()
                                .addComponent(lblEmailMes, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(chkAutoMes, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(spr3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 7, Short.MAX_VALUE))
                    .addComponent(spnToMes))
                .addContainerGap())
        );

        pnlButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        bntAddfile.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        bntAddfile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/icons/Add.png"))); // NOI18N
        bntAddfile.setText("Thêm file");
        bntAddfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntAddfileActionPerformed(evt);
            }
        });

        bntClear.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        bntClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/icons/refresh.png"))); // NOI18N
        bntClear.setText("Viết lại");
        bntClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntClearActionPerformed(evt);
            }
        });

        bntExit.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        bntExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/icons/exit.png"))); // NOI18N
        bntExit.setText("Thoát");
        bntExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntExitActionPerformed(evt);
            }
        });

        bntSend.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        bntSend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/icons/send.png"))); // NOI18N
        bntSend.setText("Gửi email");
        bntSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlButtonLayout = new javax.swing.GroupLayout(pnlButton);
        pnlButton.setLayout(pnlButtonLayout);
        pnlButtonLayout.setHorizontalGroup(
            pnlButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bntAddfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(bntClear)
                .addGap(18, 18, 18)
                .addComponent(bntExit, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bntSend)
                .addContainerGap())
        );

        pnlButtonLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {bntClear, bntExit, bntSend});

        pnlButtonLayout.setVerticalGroup(
            pnlButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntAddfile)
                    .addComponent(bntExit)
                    .addComponent(bntSend)
                    .addComponent(bntClear))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlButtonLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {bntAddfile, bntClear, bntExit, bntSend});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlFrom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlTo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkAutoFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAutoFromActionPerformed
        this.autoAccount();
    }//GEN-LAST:event_chkAutoFromActionPerformed

    private void chkAutoMailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAutoMailsActionPerformed
        this.autoEmail();
    }//GEN-LAST:event_chkAutoMailsActionPerformed

    private void chkAutoMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAutoMesActionPerformed
        this.autoMessage();
    }//GEN-LAST:event_chkAutoMesActionPerformed

    private void txtToMailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtToMailKeyReleased
        this.keyAction(evt);
    }//GEN-LAST:event_txtToMailKeyReleased

    private void bntClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntClearActionPerformed
        this.clearForm();
    }//GEN-LAST:event_bntClearActionPerformed

    private void bntAddfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntAddfileActionPerformed
        this.file = XImage.ChooserFile(this);
        this.bntAddfile.setText(file == null ? "Thêm file" : file.getName());
    }//GEN-LAST:event_bntAddfileActionPerformed

    private void bntExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntExitActionPerformed
        Util.ExitForm(this.getTitle(), this);
    }//GEN-LAST:event_bntExitActionPerformed

    private void bntSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSendActionPerformed
        if (Validate()) {
            this.sendingEmail();
        }
    }//GEN-LAST:event_bntSendActionPerformed

    private void txtEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyReleased
        this.user = txtEmail.getText();
    }//GEN-LAST:event_txtEmailKeyReleased

    @SuppressWarnings("deprecation")
    private void txtMatKhauKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatKhauKeyReleased
        this.pass = txtMatKhau.getText();
    }//GEN-LAST:event_txtMatKhauKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MailSendingJDialog.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            MailSendingJDialog dialog = new MailSendingJDialog(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntAddfile;
    private javax.swing.JButton bntClear;
    private javax.swing.JButton bntExit;
    private javax.swing.JButton bntSend;
    private javax.swing.JCheckBox chkAutoFrom;
    private javax.swing.JCheckBox chkAutoMails;
    private javax.swing.JCheckBox chkAutoMes;
    private javax.swing.JLabel lblEmailGui;
    private javax.swing.JLabel lblEmailMes;
    private javax.swing.JLabel lblEmailTo;
    private javax.swing.JLabel lblEmailTo2;
    private javax.swing.JLabel lblMatKhau;
    private javax.swing.JPanel pnlButton;
    private javax.swing.JPanel pnlFrom;
    private javax.swing.JPanel pnlTo;
    private javax.swing.JScrollPane spnToMail;
    private javax.swing.JScrollPane spnToMes;
    private javax.swing.JSeparator spr1;
    private javax.swing.JSeparator spr2;
    private javax.swing.JSeparator spr3;
    private javax.swing.JSeparator spr4;
    private javax.swing.JSeparator spr5;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JPasswordField txtMatKhau;
    private javax.swing.JTextArea txtMesage;
    private javax.swing.JTextField txtTieuDe;
    private javax.swing.JTextArea txtToMail;
    // End of variables declaration//GEN-END:variables

    private String user, pass;
    private File file;

    private void autoAccount() {
        boolean checkFrom = chkAutoFrom.isSelected();
        txtEmail.setText(checkFrom ? "Email hệ thống." : null);
        txtMatKhau.setText(checkFrom ? "........" : null);

        user = checkFrom ? "hoandps18107@gmail.com" : null;
        pass = checkFrom ? "Dhps18107" : null;

        txtEmail.setEnabled(!checkFrom);
        txtMatKhau.setEnabled(!checkFrom);
    }

    // Tự động điền thông email
    private void autoEmail() {
        boolean check = chkAutoMails.isSelected();
        txtToMail.setText(check ? "ngoduyhoaname2002@gmail.com,\n"
                + "hoandps18107@fpt.edu.vn,\n"
                + "ngoduyhoanam98@gmail.com" : txtToMail.getText());
    }

    // Tự động điền thông tin nội dung
    private void autoMessage() {
        boolean check = chkAutoMes.isSelected();
        txtMesage.setEditable(!check);
        txtMesage.setText(check ? getMessage() : txtMesage.getText());
    }

    private String getMessage() {
        StringBuilder s = new StringBuilder("Lập trình ciy gửi lời chúc tới bạn");
        s.append("\nHôm nay là: ").append(new Date());
        s.append("\n!chúc bạn một ngày tốt lành").append("\nHết.");
        return s.toString();
    }

    // Thực hiện thao tác phím sửa văn bản gửi tới email
    private void keyAction(java.awt.event.KeyEvent evt) {
        char x = evt.getKeyChar();
        String mails = txtToMail.getText();
        if (x == ' ') {
            mails = mails.replace(" ", ",\n");
        }
        if (x == '-') {
            mails = mails.replace("-", ",\n");
        }
        if (x == ';') {
            mails = mails.replace(";", ",\n");
        }
        if (x == '\t') {
            mails = mails.replace("", "");
        }
        txtToMail.setText(mails);
        txtToMail.setBackground(null);
    }

    // Xóa thông tin trên form
    private void clearForm() {
        this.txtEmail.setText(user = null);
        this.txtMatKhau.setText(pass = null);
        this.txtMesage.setText(null);
        this.txtToMail.setText(null);
        this.chkAutoMails.setSelected(false);
        this.chkAutoFrom.setSelected(false);
        this.chkAutoMes.setSelected(false);
        this.txtEmail.setEnabled(true);
        this.txtMatKhau.setEnabled(true);
        this.bntAddfile.setText("Thêm file");
        this.file = null;
    }

    // Gửi email
    private void sendingEmail() {
        if (user == null || pass == null) {
            MsgBox.alert(this, "Chưa có thông tin người gửi", "Gửi mail: "
                    + this.getTitle(), MsgBox.ThongTin);
            this.chkAutoFrom.setSelected(false);
            this.txtEmail.setText(user);
            this.txtMatKhau.setText(pass);
            this.txtEmail.setEnabled(true);
            this.txtMatKhau.setEnabled(true);
        } else {
            new Thread() {
                @Override // Tạo mới 1 luồng đa nhiệm giữa "gửi email" vs "nút gửi"
                public void run() {
                    // Tạo mới Jdialog tiến trình gửi
                    WaitingSendJdialog dialog = new WaitingSendJdialog(parent, true);
                    java.awt.EventQueue.invokeLater(() -> {
                        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                            @Override
                            public void windowClosing(java.awt.event.WindowEvent e) {
                                System.exit(0);
                            }
                        });
                        dialog.setVisible(true);
                    });
                    try {
                        dialog.setTrangThai("Đang tạo hộp thư...", 10);
                        sleep(5000);
                        SendMail x = new SendMail(user, pass);
                        if (file != null) {
                            dialog.setTrangThai("Đang lấy file", 25);
                            x.setFile(file);
                            sleep(500);
                        }
                        dialog.setTrangThai("Đang soạn thư", 70);
                        sleep(500);
                        x.setUp(txtToMail.getText(), txtTieuDe.getText(), txtMesage.getText());
                        dialog.setTrangThai("Đang gửi email", 90);
                        sleep(1000);
                        if (x.sendingEmail()) {
                            dialog.setTrangThai("Gửi email thành công.", 100);
                            sleep(3000);
                            dialog.dispose();
                        }
                    } catch (InterruptedException e) {
                        try {
                            dialog.setTrangThai("Gửi email thất bại!", 0);
                            sleep(1000);
                        } catch (InterruptedException ex) {
                        }
                    }
                }
            }.start();
        }
    }

    private boolean Validate() {
        if (txtToMail.getText().isEmpty()) {
            MsgBox.alert(this, "Chưa nhập địa chỉ nhận!", "Người nhận email", MsgBox.CanhBao);
            txtToMail.setBackground(Color.YELLOW);
            return false;
        }
        return true;
    }
}
