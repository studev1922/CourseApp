/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.course.views;

import java.awt.Color;
import java.sql.Date;

import com.course.dao.NhanVienDAO;
import com.course.model.Author;
import com.course.model.MsgBox;
import com.course.model.Validate;

/**
 *
 * @author abc
 */
public final class DoiMatKhauJDialog extends javax.swing.JDialog {

    private static final long serialVersionUID = 1L;

    /**
     * Creates new form DoiMatKhauJDialog
     *
     * @param parent
     * @param modal
     */
    java.awt.Frame parent;

    public DoiMatKhauJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(parent);
        try {
            if (Author.isLogin()) {
                this.txtMaNV.setText(Author.user.getMaNV());
                this.parent = parent;
            } else {
                MsgBox.alert(parent, "Chưa nhập tài khoản",
                        "Đổi mật khẩu!", MsgBox.BaoLoi);
                System.exit(0);
            }

        } catch (Exception e) {
            System.out.println(e.getMessage());
            System.exit(0);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDoiMatKhau = new javax.swing.JLabel();
        lblTenDangNhap = new javax.swing.JLabel();
        lblMatKhauHienTai = new javax.swing.JLabel();
        lblMatKhauMoi = new javax.swing.JLabel();
        lblNhapLaiMatKhau = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        txtMatKhau = new javax.swing.JPasswordField();
        txtMatKhau1 = new javax.swing.JPasswordField();
        txtMatKhau2 = new javax.swing.JPasswordField();
        bntDong = new javax.swing.JButton();
        bntQuen = new javax.swing.JButton();
        bntHuyBo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("EduSys - Đổi mật khẩu");

        lblDoiMatKhau.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        lblDoiMatKhau.setForeground(new java.awt.Color(51, 204, 0));
        lblDoiMatKhau.setText("ĐỔI MẬT KHẨU");

        lblTenDangNhap.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        lblTenDangNhap.setText("Tên đăng nhập");

        lblMatKhauHienTai.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        lblMatKhauHienTai.setText("Mật khẩu hiện tại");

        lblMatKhauMoi.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        lblMatKhauMoi.setText("Mật khẩu mới");

        lblNhapLaiMatKhau.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        lblNhapLaiMatKhau.setText("Nhập lại mật khẩu");

        txtMaNV.setEditable(false);
        txtMaNV.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        txtMatKhau.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        txtMatKhau1.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        txtMatKhau2.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        bntDong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/icons/key.png"))); // NOI18N
        bntDong.setText("Đồng ý");
        bntDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntDongActionPerformed(evt);
            }
        });

        bntQuen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/icons/refresh.png"))); // NOI18N
        bntQuen.setText("Quên MK");
        bntQuen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntQuenActionPerformed(evt);
            }
        });

        bntHuyBo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/icons/multiply.png"))); // NOI18N
        bntHuyBo.setText("Hủy bỏ");
        bntHuyBo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntHuyBoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bntDong)
                        .addGap(18, 18, 18)
                        .addComponent(bntQuen)
                        .addGap(18, 18, 18)
                        .addComponent(bntHuyBo))
                    .addComponent(lblDoiMatKhau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTenDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblMatKhauHienTai, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblMatKhauMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblNhapLaiMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMaNV, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(txtMatKhau1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMatKhau2, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(txtMatKhau))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {bntDong, bntHuyBo, bntQuen});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDoiMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblTenDangNhap, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                    .addComponent(lblMatKhauHienTai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblMatKhauMoi, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                    .addComponent(lblNhapLaiMatKhau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMatKhau1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMatKhau2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntHuyBo)
                    .addComponent(bntQuen)
                    .addComponent(bntDong))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {bntDong, bntHuyBo, bntQuen});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bntQuenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntQuenActionPerformed
        new QuenMatKhauJDialog(this.parent, true).setVisible(true);
    }//GEN-LAST:event_bntQuenActionPerformed

    private void bntHuyBoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntHuyBoActionPerformed
        this.dispose();
    }//GEN-LAST:event_bntHuyBoActionPerformed

    private void bntDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntDongActionPerformed
        Login(evt);
    }//GEN-LAST:event_bntDongActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoiMatKhauJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            DoiMatKhauJDialog dialog = new DoiMatKhauJDialog(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntDong;
    private javax.swing.JButton bntHuyBo;
    private javax.swing.JButton bntQuen;
    private javax.swing.JLabel lblDoiMatKhau;
    private javax.swing.JLabel lblMatKhauHienTai;
    private javax.swing.JLabel lblMatKhauMoi;
    private javax.swing.JLabel lblNhapLaiMatKhau;
    private javax.swing.JLabel lblTenDangNhap;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JPasswordField txtMatKhau;
    private javax.swing.JPasswordField txtMatKhau1;
    private javax.swing.JPasswordField txtMatKhau2;
    // End of variables declaration//GEN-END:variables

    @SuppressWarnings("deprecation")
    private void Login(java.awt.event.ActionEvent evt) {
        if (CheckForm()) {
            int check = MsgBox.confirm(this, "Xác nhận đổi mật khẩu?", this.getTitle(), 0);
            if (check == 0) {
                Author.user.setMatKhau(txtMatKhau1.getText());
                new NhanVienDAO().Update(Author.user);
                MsgBox.alert(this, "Đổi mật khẩu thành công lúc:\n"
                        + new Date(evt.getWhen()), this.getTitle(), MsgBox.KhongCo);
                this.dispose();
            }
        }
    }

    @SuppressWarnings("deprecation")
    private boolean CheckForm() {
        this.clearBgrForm();
        if (Author.isLogin()) {
            String pass1 = txtMatKhau1.getText();
            String pass2 = txtMatKhau2.getText();
            if (!Author.user.getMaNV().equalsIgnoreCase(txtMaNV.getText())) {
                MsgBox.alert(this, "Sai tên đăng nhập!", this.getTitle(), MsgBox.CanhBao);
                return false;
            }
            if (!Author.user.getMatKhau().equals(this.txtMatKhau.getText())) {
                MsgBox.alert(this, "Sai mật khẩu!", this.getTitle(), MsgBox.CanhBao);
                this.txtMatKhau.setBackground(Color.YELLOW);
                return false;
            }
            if (!Validate.ValString(this, Validate.MAT_KHAU, pass1, 5, 50)) {
                this.txtMatKhau1.setBackground(Color.YELLOW);
                return false;
            }
            if (!pass2.equals(pass1)) {
                MsgBox.alert(this, "Mật khẩu không trùng khớp!", this.getTitle(), MsgBox.BaoLoi);
                this.txtMatKhau2.setBackground(Color.YELLOW);
                return false;
            }
        } else {
            return false;
        }
        return true;
    }

    private void clearBgrForm() {
        this.txtMatKhau.setBackground(null);
        this.txtMatKhau1.setBackground(null);
        this.txtMatKhau2.setBackground(null);
    }
}
